block:
    NumContStates: 0
    NumDiscStates: 0
    NumOutputs: 5
    NumInputs: 11
    DirFeedthrough: 1
    NumSampleTimes: 1
    x0: []
    tss: [250, 0]
machines:
    machine_1:
        name: "Machine 1"
        model: "model_1"
        trainingData: "machine_1_data4.csv"
        params:
            op_limits: [56, 220]
            n_ss: 1
            x_tol: 2
            y_tol: 5
    machine_2:
        name: "Machine 2"
        model: "model_2"
        trainingData: "machine_2_data4.csv"
        params:
            op_limits: [237, 537]
            n_ss: 1
            x_tol: 2
            y_tol: 5
    machine_3:
        name: "Machine 3"
        model: "model_3"
        trainingData: "machine_3_data4.csv"
        params:
            op_limits: [194, 795]
            n_ss: 1
            x_tol: 2
            y_tol: 5
    machine_4:
        name: "Machine 4"
        model: "model_3"
        trainingData: "machine_4_data4.csv"
        params:
            op_limits: [194, 795]
            n_ss: 1
            x_tol: 2
            y_tol: 5
    machine_5:
        name: "Machine 5"
        model: "model_3"
        trainingData: "machine_5_data4.csv"
        params:
            op_limits: [194, 795]
            n_ss: 1
            x_tol: 2
            y_tol: 5
models:
    model_1:
        name: "GP1"
        setupFcn: "gpr_model_setup"
        predictFcn: "gpr_model_predict"
        updateFcn: "gpr_model_update"
        params:
            predictorNames: "Load"
            responseNames: "Power"
            outputTransform:
                y: "@(x, y) (y + 0.7).*x"
                y_inv: "@(x, y) y./x - 0.7"
            fit:
                KernelFunction: "squaredexponential"
                KernelParameters: [30.0, 0.1]  # [sigmaL0, sigmaF0]
                BasisFunction: "none"
                Sigma: 0.02  # noise std. dev.
                FitMethod: "none"
            significance: 0.1
    model_2:
        name: "GP2"
        setupFcn: "gpr_model_setup"
        predictFcn: "gpr_model_predict"
        updateFcn: "gpr_model_update"
        params:
            predictorNames: "Load"
            responseNames: "Power"
            outputTransform:
                y: "@(x, y) (y + 0.7).*x"
                y_inv: "@(x, y) y./x - 0.7"
            fit:
                KernelFunction: "squaredexponential"
                KernelParameters: [30.0, 0.1]  # [sigmaL0, sigmaF0]
                BasisFunction: "none"
                Sigma: 0.02  # noise std. dev.
                FitMethod: "none"
            significance: 0.1
    model_3:
        name: "GP3"
        setupFcn: "gpr_model_setup"
        predictFcn: "gpr_model_predict"
        updateFcn: "gpr_model_update"
        params:
            predictorNames: "Load"
            responseNames: "Power"
            outputTransform:
                y: "@(x, y) (y + 0.7).*x"
                y_inv: "@(x, y) y./x - 0.7"
            fit:
                KernelFunction: "squaredexponential"
                KernelParameters: [30.0, 0.1]  # [sigmaL0, sigmaF0]
                BasisFunction: "none"
                Sigma: 0.02  # noise std. dev.
                FitMethod: "none"
            significance: 0.1
optimizer:
    obj_func: "LoadObjFun"
    X0: [56.1, 237.1, 194.1, 194.1, 194.1]
    A: []
    B: []
    Aeq: []
    Beq: []
    LB: [56, 237, 194, 194, 194]
    UB: [220, 537, 795, 795, 795]
    const_func: "MaxPowerConstraint"
    optimoptions:
        MaxIterations: 500000
        Display: "iter"
    params:
        w: 1000
        z: 10000
        PMax: 1580